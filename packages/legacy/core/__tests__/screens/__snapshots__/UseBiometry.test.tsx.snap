// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UseBiometry Screen Renders correctly when biometry available 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "left",
      "right",
      "bottom",
    ]
  }
>
  <RCTScrollView
    style={
      Object {
        "backgroundColor": "#000000",
        "height": "100%",
        "padding": 20,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <
          style={
            Array [
              Object {
                "marginBottom": 66,
                "minHeight": 200,
                "minWidth": 200,
              },
            ]
          }
        />
      </View>
      <View>
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "normal",
              },
            ]
          }
        >
          Biometry.EnabledText1
        </Text>
        <Text />
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "normal",
              },
            ]
          }
        >
          Biometry.EnabledText2
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontWeight": "normal",
                },
                Object {
                  "fontWeight": "bold",
                },
              ]
            }
          >
             
            Biometry.Warning
          </Text>
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "marginVertical": 20,
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "justifyContent": "center",
              "marginRight": 10,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontWeight": "normal",
                },
                Object {
                  "fontWeight": "bold",
                },
              ]
            }
          >
            Biometry.UseToUnlock
          </Text>
        </View>
        <View
          style={
            Object {
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityLabel="Biometry.Toggle"
            accessibilityRole="switch"
            accessibilityState={
              Object {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              Object {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID="com.ariesbifold:id/ToggleBiometrics"
          >
            <RCTSwitch
              accessibilityRole="switch"
              disabled={false}
              onChange={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onTintColor="rgba(53, 130, 63, 0.35)"
              style={
                Array [
                  Object {
                    "height": 31,
                    "width": 51,
                  },
                  Object {
                    "backgroundColor": "#D3D3D3",
                    "borderRadius": 16,
                  },
                ]
              }
              thumbTintColor="#606060"
              tintColor="#D3D3D3"
              value={false}
            />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "margin": 20,
        "marginTop": "auto",
      }
    }
  >
    <View
      accessibilityLabel="Continue"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#42803E",
          "borderRadius": 4,
          "opacity": 1,
          "padding": 16,
        }
      }
      testID="com.ariesbifold:id/Continue"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "bold",
                "textAlign": "center",
              },
              false,
              false,
              false,
            ]
          }
        >
          Continue
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    style={
      Object {
        "backgroundColor": "#000000",
      }
    }
    transparent={false}
    visible={false}
  />
</RNCSafeAreaView>
`;

exports[`UseBiometry Screen Renders correctly when biometry not available 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "left",
      "right",
      "bottom",
    ]
  }
>
  <RCTScrollView
    style={
      Object {
        "backgroundColor": "#000000",
        "height": "100%",
        "padding": 20,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <
          style={
            Array [
              Object {
                "marginBottom": 66,
                "minHeight": 200,
                "minWidth": 200,
              },
            ]
          }
        />
      </View>
      <View>
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "normal",
              },
            ]
          }
        >
          Biometry.NotEnabledText1
        </Text>
        <Text />
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "normal",
              },
            ]
          }
        >
          Biometry.NotEnabledText2
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "marginVertical": 20,
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "justifyContent": "center",
              "marginRight": 10,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontWeight": "normal",
                },
                Object {
                  "fontWeight": "bold",
                },
              ]
            }
          >
            Biometry.UseToUnlock
          </Text>
        </View>
        <View
          style={
            Object {
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityLabel="Biometry.Toggle"
            accessibilityRole="switch"
            accessibilityState={
              Object {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              Object {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID="com.ariesbifold:id/ToggleBiometrics"
          >
            <RCTSwitch
              accessibilityRole="switch"
              disabled={true}
              onChange={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onTintColor="rgba(53, 130, 63, 0.35)"
              style={
                Array [
                  Object {
                    "height": 31,
                    "width": 51,
                  },
                  Object {
                    "backgroundColor": "#D3D3D3",
                    "borderRadius": 16,
                  },
                ]
              }
              thumbTintColor="#606060"
              tintColor="#D3D3D3"
              value={false}
            />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "margin": 20,
        "marginTop": "auto",
      }
    }
  >
    <View
      accessibilityLabel="Continue"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#42803E",
          "borderRadius": 4,
          "opacity": 1,
          "padding": 16,
        }
      }
      testID="com.ariesbifold:id/Continue"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "bold",
                "textAlign": "center",
              },
              false,
              false,
              false,
            ]
          }
        >
          Continue
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    style={
      Object {
        "backgroundColor": "#000000",
      }
    }
    transparent={false}
    visible={false}
  />
</RNCSafeAreaView>
`;

exports[`UseBiometry Screen Toggles use biometrics ok 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "left",
      "right",
      "bottom",
    ]
  }
>
  <RCTScrollView
    style={
      Object {
        "backgroundColor": "#000000",
        "height": "100%",
        "padding": 20,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <
          style={
            Array [
              Object {
                "marginBottom": 66,
                "minHeight": 200,
                "minWidth": 200,
              },
            ]
          }
        />
      </View>
      <View>
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "normal",
              },
            ]
          }
        >
          Biometry.EnabledText1
        </Text>
        <Text />
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "normal",
              },
            ]
          }
        >
          Biometry.EnabledText2
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontWeight": "normal",
                },
                Object {
                  "fontWeight": "bold",
                },
              ]
            }
          >
             
            Biometry.Warning
          </Text>
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "marginVertical": 20,
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "justifyContent": "center",
              "marginRight": 10,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontWeight": "normal",
                },
                Object {
                  "fontWeight": "bold",
                },
              ]
            }
          >
            Biometry.UseToUnlock
          </Text>
        </View>
        <View
          style={
            Object {
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityLabel="Biometry.Toggle"
            accessibilityRole="switch"
            accessibilityState={
              Object {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              Object {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID="com.ariesbifold:id/ToggleBiometrics"
          >
            <RCTSwitch
              accessibilityRole="switch"
              disabled={false}
              onChange={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onTintColor="rgba(53, 130, 63, 0.35)"
              style={
                Array [
                  Object {
                    "height": 31,
                    "width": 51,
                  },
                  Object {
                    "backgroundColor": "#D3D3D3",
                    "borderRadius": 16,
                  },
                ]
              }
              thumbTintColor="#606060"
              tintColor="#D3D3D3"
              value={false}
            />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "margin": 20,
        "marginTop": "auto",
      }
    }
  >
    <View
      accessibilityLabel="Continue"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(53, 130, 63, 0.35)",
          "borderRadius": 4,
          "opacity": 1,
          "padding": 16,
        }
      }
      testID="com.ariesbifold:id/Continue"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            }
          }
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 25,
                },
                Object {
                  "color": "#FFFFFF",
                },
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "bold",
                "textAlign": "center",
              },
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "bold",
                "textAlign": "center",
              },
              false,
              false,
            ]
          }
        >
          Continue
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    style={
      Object {
        "backgroundColor": "#000000",
      }
    }
    transparent={false}
    visible={false}
  />
</RNCSafeAreaView>
`;
